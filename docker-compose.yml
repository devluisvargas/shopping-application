version: "3.9"
services:
  db-inventory:
    image: mysql:latest
    container_name: db-inventory
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: inventory-service
    restart: always
    ports:
      - "3305:3306"
    volumes:
      - data-inventory:/var/lib/mysql
    networks:
      - shopping-network


  db-order:
    image: mysql:latest
    container_name: db-order
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: order-service
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - data-order:/var/lib/mysql
    networks:
      - shopping-network

  db-product:
    image: mongo:latest
    container_name: db-product
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - data-product:/data/db
    networks:
      - shopping-network


  keycloak:
    image: quay.io/keycloak/keycloak:18.0.0
    container_name: keycloak
    ports:
      - "8085:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: start-dev
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data
      - keycloak_config:/opt/jboss/keycloak/standalone/configuration
    networks:
      - shopping-network

  discovery-server:
    image: discovery-server:v1
    container_name: discovery-server
    restart: always
    ports:
      - "8761:8761"
    env_file:
      - discovery-server/.env
    networks:
      - shopping-network


  api-gateway:
    image: api-gateway:v1
    container_name: api-gateway
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - api-gateway/.env
    depends_on:
      - discovery-server
      - keycloak
    networks:
      - shopping-network

  inventory-service:
    image: inventory-service:v1
    container_name: inventory-service
    restart: always
    env_file:
      - inventory-service/.env
    depends_on:
      - db-inventory
      - discovery-server
      - api-gateway
    networks:
      - shopping-network

  order-service:
    image: order-service:v1
    container_name: order-service
    restart: always
    env_file:
      - order-service/.env
    depends_on:
      - db-order
      - discovery-server
      - api-gateway
    networks:
      - shopping-network


  product-service:
    image: product-service:v1
    container_name: product-service
    restart: always
    env_file:
      - product-service/.env
    depends_on:
      - db-product
      - discovery-server
      - api-gateway
    networks:
      - shopping-network
volumes:
  data-order:
    name: data-order
  data-inventory:
    name: data-inventory
  data-product:
    name: data-product
  keycloak_data:
    name: keycloak_data
  keycloak_config:
    name: keycloak_config
networks:
  shopping-network: